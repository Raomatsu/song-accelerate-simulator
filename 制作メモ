【概要】
指定した曲で「⚪︎と言ったら加速してしまう」を作った時、一番加速する⚪︎を割り出してくれる。その時の最終的なスピード倍率も出してくれる。

【目的】
・フロントを0->1で作る経験をして、フロントエンドへの苦手意識の克服の一歩を踏み出すこと。html、css（bootstrap）、vue、tsの知見を得ること。
・Javaでサーバサイドを0->1で作ること

【画面】
　・検索画面
　　・検索窓・検索ボタン
　　・曲名
　　・アーティスト
　　・アルバムジャケット
　　・generateボタン
　・結果ポップアップ
　　・○と言ったら加速してしまうxxx
　　・最高スピード：n倍

【最終的な処理シーケンス】
　・曲検索画面で曲検索
　・generateボタン押下
　・結果画面ポップアップ（「○と言ったら加速してしまうxxx」、「最高スピード：n倍」）

【課題】
・歌詞検索API叩くのが意外と面倒そう
・楽曲検索APIも必要と思われる
→やりたいのはフロントエンドの勉強だし、バックエンドはとりあえずモックで良いかな。
・レスポンシブ

【技術】
・フロント
　・vue
　・typescript
　・BootStrap
・サーバサイド
　・Java
　・SpringBoot

【バックエンド設計】
・楽曲検索APIラッパー
　⚪︎リクエスト
　　・クエリ：検索文字列（いったんなし：offset、results）
　⚪︎レスポンス
　　・リスト
　　　・曲名
　　　・誰の曲か
　　　・ジャケット画像のURLか何か
・加速後結果導出API
　⚪︎リクエスト
　　・曲を一意に特定できる情報（歌詞検索APIのインタフェースに合わせる）
　⚪︎レスポンス
　　・登場頻度の最も多かった文字
　　・↑の登場回数
　　・最大速度（1.1の↑乗）


【初段ではやらないこと】
・楽曲検索APIの実行
・歌詞検索APIの実行


# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~